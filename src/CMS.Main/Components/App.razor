<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap"
          rel="stylesheet">
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,300..500,0..1,-50..200&icon_names=@IconNamesSorted"/>
    <link rel="stylesheet" href="@Assets["css/tailwind.css"]"/>
    <link rel="stylesheet" href="@Assets["CMS.Main.styles.css"]"/>
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
    <ImportMap/>
    <HeadOutlet/>
</head>

<body class="noto-sans">
<script src="_framework/blazor.web.js"></script>
<script src="js/notifications.js"></script>
<script src="js/clipboard.js"></script>
</body>
<Routes/>
</html>

@code {

    private readonly string[] iconNames =
    [
        "menu",
    "add",
    "filter_list",
        "email",
        "lock",
        "login",
        "verified_user",
        "person_add",
        "send",
        "arrow_back",
        "arrow_downward",
        "arrow_forward",
        "arrow_upward",
        "keyboard_arrow_up",
        "keyboard_arrow_down",
        "refresh",
        "check_circle",
        "error",
        "progress_activity",
        "mail",
        "warning",
        "download",
        "delete",
        "save",
        "settings",
        "close",
        "person",
        "logout",
        "help",
        "edit",
        "vpn_key",
        "check",
        "info",
        "description",
        "notifications_active",
        "list",
        "dock_to_right",
        "deployed_code",
        "content_copy"
    ];

    private string IconNamesSorted => string.Join(',', iconNames.OrderBy(x => x));

}