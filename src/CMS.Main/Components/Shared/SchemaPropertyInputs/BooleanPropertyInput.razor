@using CMS.Main.Abstractions.Properties.PropertyTypes
@using CMS.Main.DTOs
@implements ISchemaPropertyInput

<div class="flex items-center gap-2">
    <InputCheckbox @bind-Value="Value"
        AdditionalAttributes="@(new Dictionary<string, object>() { { "disabled", Disabled },
        { "class", $"h-4 w-4 rounded border-slate-300 text-blue-600 focus:ring-blue-500 {(Disabled ? "bg-slate-100 text-slate-500 cursor-not-allowed" : "")}"} })" />
    <span class="text-sm text-slate-600">@(Value ? "true" : "false")</span>
</div>

@code {
    [Parameter, EditorRequired]
    public PropertyDto Property { get; set; } = default!;

    [Parameter]
    public EventCallback<object?> ValueChanged { get; set; }

    private bool _value = false;
    private bool Value
    {
        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;
            _ = ValueChanged.InvokeAsync(_value);
        }
    }

    private bool Disabled { get; set; } = false;

    protected override void OnParametersSet()
    {
        if (Property.Type != PropertyType.Boolean)
        {
            throw new InvalidOperationException($"BooleanPropertyInput can only be used with PropertyType.Boolean, but got {Property.Type}");
        }
    }

    public object? GetValue() => Value;

    public void SetDisabled(bool disabled)
    {
        Disabled = disabled;
    }

    public void Reset()
    {
        Value = false;
    }
}
