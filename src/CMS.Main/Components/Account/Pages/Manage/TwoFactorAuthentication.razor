@page "/Account/Manage/TwoFactorAuthentication"

@using CMS.Main.Data
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject IDbContextConcurrencyHelper ConcurrencyHelper

<PageTitle>Two-factor authentication (2FA)</PageTitle>

<div class="max-w-5xl">
    <StatusMessage/>
    @if (canTrack)
    {
        <div class="space-y-4">
            @if (is2faEnabled)
            {
                @if (recoveryCodesLeft == 0)
                {
                    <div class="bg-rose-600/10 border border-rose-600/20 text-rose-400 text-sm p-3 rounded-md mb-4 flex items-center">
                        <span class="material-symbols-outlined icons-default text-base mr-2">error</span>
                        <div>
                            <strong>You have no recovery codes left.</strong>
                            <p>You must <LinkButton Variant="ButtonVariant.Primary" Href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</LinkButton> before you can log in with a recovery code.</p>
                        </div>
                    </div>
                }
                else if (recoveryCodesLeft == 1)
                {
                    <div class="bg-rose-600/10 border border-rose-600/20 text-rose-400 text-sm p-3 rounded-md mb-4 flex items-center">
                        <span class="material-symbols-outlined icons-default text-base mr-2">error</span>
                        <div>
                            <strong>You have 1 recovery code left.</strong>
                            <p>You can <LinkButton Variant="ButtonVariant.Primary" Href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</LinkButton>.</p>
                        </div>
                    </div>
                }
                else if (recoveryCodesLeft <= 3)
                {
                    <div class="bg-amber-500/10 border border-amber-500/20 text-amber-400 text-sm p-3 rounded-md mb-4 flex items-center">
                        <span class="material-symbols-outlined icons-default text-base mr-2">warning</span>
                        <div>
                            <strong>You have @recoveryCodesLeft recovery codes left.</strong>
                            <p>You should <LinkButton Variant="ButtonVariant.Primary" Href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</LinkButton>.</p>
                        </div>
                    </div>
                }
                @if (isMachineRemembered)
                {
                    <form style="display: inline-block" @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post">
                        <AntiforgeryToken/>
                        <PrimaryButton Type="submit" Variant="ButtonVariant.Primary" Icon="logout" aria-label="Forget this browser">Forget this browser</PrimaryButton>
                    </form>
                }
                    <LinkButton Variant="ButtonVariant.Danger" Href="Account/Manage/Disable2fa" aria-label="Disable 2FA">Disable 2FA</LinkButton>
                <LinkButton Variant="ButtonVariant.Primary" Href="Account/Manage/GenerateRecoveryCodes" aria-label="Reset recovery codes">Reset recovery codes</LinkButton>
            }
            <h2 class="text-lg font-medium text-neutral-100 mb-2">Authenticator app</h2>
            @if (!hasAuthenticator)
            {
                <LinkButton Variant="ButtonVariant.Primary" Href="Account/Manage/EnableAuthenticator" Icon="add" aria-label="Add authenticator app">Add authenticator app</LinkButton>
            }
            else
            {
                <LinkButton Variant="ButtonVariant.Primary" Href="Account/Manage/EnableAuthenticator" Icon="settings" aria-label="Set up authenticator app">Set up authenticator app</LinkButton>
                <LinkButton Variant="ButtonVariant.Danger" Href="Account/Manage/ResetAuthenticator" Icon="refresh" aria-label="Reset authenticator app">Reset authenticator app</LinkButton>
            }
        </div>
    }
    else
    {
        <div class="bg-rose-600/10 border border-rose-600/20 text-rose-400 text-sm p-3 rounded-md mb-4 flex items-center">
            <span class="material-symbols-outlined icons-default text-base mr-2">error</span>
            <div>
                <strong>Privacy and cookie policy have not been accepted.</strong>
                <p>You must accept the policy before you can enable two factor authentication.</p>
            </div>
        </div>
    }
</div>

@code {
    private bool canTrack;
    private bool hasAuthenticator;
    private int recoveryCodesLeft;
    private bool is2faEnabled;
    private bool isMachineRemembered;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        canTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
        hasAuthenticator = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.GetAuthenticatorKeyAsync(user)) is not null;
        is2faEnabled = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.GetTwoFactorEnabledAsync(user));
        isMachineRemembered = await ConcurrencyHelper.ExecuteAsync(_ => SignInManager.IsTwoFactorClientRememberedAsync(user));
        recoveryCodesLeft = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.CountRecoveryCodesAsync(user));
    }
    private async Task OnSubmitForgetBrowserAsync()
    {
        await ConcurrencyHelper.ExecuteAsync(_ => SignInManager.ForgetTwoFactorClientAsync());
        RedirectManager.RedirectToCurrentPageWithStatus(
            "The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.",
            HttpContext);
    }

}