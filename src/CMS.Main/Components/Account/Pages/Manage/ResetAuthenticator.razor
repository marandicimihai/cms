@page "/Account/Manage/ResetAuthenticator"

@using CMS.Main.Data
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<ResetAuthenticator> Logger

<PageTitle>Reset authenticator key</PageTitle>

<div class="max-w-screen-lg mx-auto p-4">
    <div class="mb-4">
        <h1 class="text-2xl font-semibold text-slate-900">Reset authenticator key</h1>
        <StatusMessage/>
    </div>
    <div class="rounded-lg border border-slate-200 bg-white shadow-sm p-4 max-w-md">
        <div class="bg-amber-50 border border-amber-200 text-amber-700 text-sm p-3 rounded-md mb-4 flex items-center">
            <span class="material-symbols-outlined icons-default text-base mr-2">warning</span>
            <div>
                <strong>If you reset your authenticator key your authenticator app will not work until you reconfigure it.</strong>
                <p>This process disables 2FA until you verify your authenticator app. If you do not complete your authenticator app configuration you may lose access to your account.</p>
            </div>
        </div>
        <form @formname="reset-authenticator" @onsubmit="OnSubmitAsync" method="post">
            <AntiforgeryToken/>
            <button class="w-full inline-flex items-center justify-center bg-rose-600 hover:bg-rose-700 text-white text-sm font-medium px-3 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-rose-500" type="submit">
                <span class="material-symbols-outlined icons-default text-base mr-2">refresh</span>
                Reset authenticator key
            </button>
        </form>
    </div>
</div>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private async Task OnSubmitAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        await UserManager.SetTwoFactorEnabledAsync(user, false);
        await UserManager.ResetAuthenticatorKeyAsync(user);
        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("User with ID '{UserId}' has reset their authentication app key.", userId);
        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToWithStatus(
            "Account/Manage/EnableAuthenticator",
            "Your authenticator app key has been reset, you will need to configure your authenticator app using the new key.",
            HttpContext);
    }

}