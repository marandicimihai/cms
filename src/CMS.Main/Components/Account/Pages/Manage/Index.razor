@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using CMS.Main.Data
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject DbContextConcurrencyHelper ConcurrencyHelper

<PageTitle>Profile</PageTitle>

<div class="max-w-screen-lg mx-auto p-4">
    <div class="mb-4">
        <h1 class="text-2xl font-semibold text-slate-900">Profile</h1>
        <StatusMessage/>
    </div>
    <div class="rounded-lg border border-slate-200 bg-white shadow-sm p-4 max-w-md">
        <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="validation-summary" role="alert"/>
            <div class="mb-4">
                <label for="username" class="block text-xs font-medium uppercase tracking-wide text-slate-600 mb-2">Username</label>
                <input type="text" value="@username" id="username" class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 bg-slate-100 text-slate-500 cursor-not-allowed" disabled/>
            </div>
            <div class="mb-4">
                <label for="Input.PhoneNumber" class="block text-xs font-medium uppercase tracking-wide text-slate-600 mb-2">Phone number</label>
                <InputText @bind-Value="Input.PhoneNumber" id="Input.PhoneNumber" class="block w-full rounded-md border border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-sm px-3 py-2" placeholder="Enter your phone number"/>
                <ValidationMessage For="() => Input.PhoneNumber" class="validation-message"/>
            </div>
            <button type="submit" class="w-full inline-flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium px-3 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                <span class="material-symbols-outlined icons-default text-base mr-2">save</span>
                Save
            </button>
        </EditForm>
    </div>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.GetUserNameAsync(user));
        phoneNumber = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.GetPhoneNumberAsync(user));

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber));
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }
        await ConcurrencyHelper.ExecuteAsync(_ => SignInManager.RefreshSignInAsync(user));
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }

}