@page "/Account/Manage/DeletePersonalData"

@using System.ComponentModel.DataAnnotations
@using CMS.Main.Data
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Logging

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<DeletePersonalData> Logger
@inject IDbContextConcurrencyHelper ConcurrencyHelper

<PageTitle>Delete Personal Data</PageTitle>

<div class="max-w-screen-lg mx-auto p-4">
    <div class="mb-4">
        <h1 class="text-2xl font-semibold text-neutral-100">Delete Personal Data</h1>
        <StatusMessage Message="@message"/>
    </div>
    <div class="rounded-xl border border-neutral-800 bg-gradient-to-b from-neutral-800 to-neutral-800/90 shadow-sm p-4 max-w-md">
        <div class="bg-amber-500/10 border border-amber-500/20 text-amber-400 text-xs p-3 rounded-md mb-4" role="alert">
            <p class="text-sm">
                <strong>Deleting this data will permanently remove your account, and this cannot be recovered.</strong>
            </p>
        </div>
        <EditForm Model="Input" FormName="delete-user" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="validation-summary" role="alert"/>
            @if (requirePassword)
            {
                <div class="mb-4">
                    <label for="Input.Password" class="block text-xs font-medium uppercase tracking-wide text-neutral-400 mb-2">Password</label>
                    <InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="block w-full rounded-full border border-neutral-600 bg-neutral-700 shadow-sm focus:border-purple-500 focus:ring-purple-500 text-neutral-100 text-sm px-4 py-3" autocomplete="current-password" aria-required="true" placeholder="Please enter your password."/>
                    <ValidationMessage For="() => Input.Password" class="validation-message"/>
                </div>
            }
            <PrimaryButton Type="submit" Variant="ButtonVariant.Danger" aria-label="Delete data and close my account">Delete data and close my account</PrimaryButton>
        </EditForm>
    </div>
</div>

@code {
    private string? message;
    private ApplicationUser user = default!;
    private bool requirePassword;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Input ??= new();
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        requirePassword = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.HasPasswordAsync(user));
    }

    private async Task OnValidSubmitAsync()
    {
        if (requirePassword && !await ConcurrencyHelper.ExecuteAsync(_ => UserManager.CheckPasswordAsync(user, Input.Password)))
        {
            message = "Error: Incorrect password.";
            return;
        }

        var result = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.DeleteAsync(user));
        if (!result.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred deleting user.");
        }

        await ConcurrencyHelper.ExecuteAsync(_ => SignInManager.SignOutAsync());

        var userId = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.GetUserIdAsync(user));
        Logger.LogInformation("User with ID '{UserId}' deleted themselves.", userId);

        RedirectManager.RedirectToCurrentPage();
    }

    private sealed class InputModel
    {
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";
    }

}