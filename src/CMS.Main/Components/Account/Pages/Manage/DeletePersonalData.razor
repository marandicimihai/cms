@page "/Account/Manage/DeletePersonalData"
@using System.ComponentModel.DataAnnotations
@using CMS.Main.Data
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<DeletePersonalData> Logger
@inject DbContextConcurrencyHelper ConcurrencyHelper

<PageTitle>Delete Personal Data</PageTitle>

<StatusMessage Message="@message"/>

<h3 class="text-lg font-medium">Delete Personal Data</h3>
<div class="alert alert-warning bg-amber-100 text-amber-900 border border-amber-200 rounded-md p-3" role="alert">
    <p class="text-sm">
        <strong>Deleting this data will permanently remove your account, and this cannot be recovered.</strong>
    </p>
</div>

<div>
    <EditForm Model="Input" FormName="delete-user" OnValidSubmit="OnValidSubmitAsync" method="post">
        <DataAnnotationsValidator/>
        <ValidationSummary class="text-rose-600 text-xs" role="alert"/>
        @if (requirePassword)
        {
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.Password" id="Input.Password"
                           class="form-control text-sm px-3 py-2 rounded-md border border-slate-300 focus:border-blue-500 focus:ring-blue-500"
                           autocomplete="current-password" aria-required="true"
                           placeholder="Please enter your password."/>
                <label for="Input.Password" class="form-label text-xs uppercase tracking-wide">Password</label>
                <ValidationMessage For="() => Input.Password" class="text-rose-600 text-xs"/>
            </div>
        }
        <button class="w-100 btn bg-rose-600 text-white hover:bg-rose-700 text-sm font-medium px-3 py-2 rounded-md"
                type="submit">Delete data and close my account
        </button>
    </EditForm>
</div>

@code {
    private string? message;
    private ApplicationUser user = default!;
    private bool requirePassword;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Input ??= new();
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        requirePassword = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.HasPasswordAsync(user));
    }

    private async Task OnValidSubmitAsync()
    {
        if (requirePassword && !await ConcurrencyHelper.ExecuteAsync(_ => UserManager.CheckPasswordAsync(user, Input.Password)))
        {
            message = "Error: Incorrect password.";
            return;
        }

        var result = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.DeleteAsync(user));
        if (!result.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred deleting user.");
        }

        await ConcurrencyHelper.ExecuteAsync(_ => SignInManager.SignOutAsync());

        var userId = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.GetUserIdAsync(user));
        Logger.LogInformation("User with ID '{UserId}' deleted themselves.", userId);

        RedirectManager.RedirectToCurrentPage();
    }

    private sealed class InputModel
    {
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";
    }

}