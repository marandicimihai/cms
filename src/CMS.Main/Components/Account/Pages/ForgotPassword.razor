@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using CMS.Main.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IDbContextConcurrencyHelper ConcurrencyHelper

<PageTitle>Forgot your password?</PageTitle>

<div class="min-h-screen bg-neutral-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div>
            <h1 class="text-2xl font-semibold text-neutral-100 text-center">Reset your password</h1>
            <p class="mt-2 text-center text-sm text-neutral-400">
                Enter your email address and we'll send you a link to reset your password.
            </p>
        </div>
        
        <div class="rounded-xl border border-neutral-800 bg-gradient-to-b from-neutral-800 to-neutral-800/90 shadow-sm p-6">
            <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator/>
                <ValidationSummary class="validation-summary" role="alert"/>

                <div class="space-y-4">
                    <div>
                        <label for="Input.Email" class="block text-xs font-medium uppercase tracking-wide text-neutral-400 mb-2">
                            Email Address
                        </label>
                        <InputText @bind-Value="Input.Email" 
                                  id="Input.Email" 
                                  class="block w-full rounded-full border border-neutral-600 bg-neutral-700 shadow-sm focus:border-purple-500 focus:ring-purple-500 text-neutral-100 text-sm px-3 py-2" 
                                  autocomplete="email" 
                                  aria-required="true" 
                                  placeholder="name@example.com"/>
                        <ValidationMessage For="() => Input.Email" class="validation-message"/>
                    </div>
                    
                    <div>
                        <PrimaryButton Type="submit" Variant="ButtonVariant.Primary" Icon="send" aria-label="Send Reset Link">Send Reset Link</PrimaryButton>
                    </div>
                </div>
            </EditForm>
            
            <div class="mt-6 text-center">
                <a href="Account/Login" 
                   class="text-sm text-purple-500 hover:text-purple-600">
                    <span class="material-symbols-outlined icons-default text-base mr-1">arrow_back</span>
                    Back to Login
                </a>
            </div>
        </div>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.FindByEmailAsync(Input.Email));
        if (user is null || !(await ConcurrencyHelper.ExecuteAsync(_ => UserManager.IsEmailConfirmedAsync(user))))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await ConcurrencyHelper.ExecuteAsync(_ => UserManager.GeneratePasswordResetTokenAsync(user));
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }

}