@using System.Linq
@using CMS.Main.Abstractions.Entries
@using CMS.Main.DTOs.SchemaProperty

<div class="flex flex-col gap-4">
    <div class="grid gap-3 md:grid-cols-[minmax(0,2fr)_minmax(0,1fr)]">
        <div>
            <label class="text-xs uppercase tracking-wide block mb-1 text-slate-600">Sort by</label>
            <select class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                @bind="SortByProperty"
                aria-label="Sort entries by property">
                @foreach (var prop in SortableProperties)
                {
                    <option value="@prop">@prop</option>
                }
            </select>
        </div>

        <div class="flex items-center gap-3 mt-1 md:mt-[1.55rem]">
            <input id="descendingCheckbox" type="checkbox" class="h-4 w-4 rounded border-slate-300 text-blue-600 focus:ring-blue-500" @bind="Descending" />
            <label for="descendingCheckbox" class="text-sm text-slate-700">Descending</label>
        </div>
    </div>

    <section class="rounded-lg border border-slate-200 bg-slate-50 p-3">
        <div class="flex items-center justify-between mb-3">
            <h3 class="text-xs uppercase tracking-wide text-slate-600">Filters</h3>
            <button type="button"
                    class="inline-flex items-center justify-center rounded-md font-medium bg-slate-200 hover:bg-slate-300 text-slate-900 text-xs px-2.5 py-1.5 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50"
                    @onclick="AddFilter"
                    aria-label="Add filter"
                    disabled="@(!CanAddFilters)">
                <span class="material-symbols-outlined icons-default text-sm mr-1">add</span>
                Add
            </button>
        </div>

        @if (filterRows.Count == 0)
        {
            <p class="text-sm text-slate-500">No filters applied. Use the Add button to include filter conditions.</p>
        }
        else
        {
            <div class="flex flex-col gap-3">
                @foreach (var row in filterRows)
                {
                    var property = GetProperty(row.PropertyName);
                    var filterChoices = property is null ? Enumerable.Empty<PropertyFilter>() : GetFilterOptions(property.Type);
                    <div class="rounded-md border border-slate-200 bg-white p-3" @key="row.Id">
                        <div class="flex flex-wrap items-end gap-3">
                            <div class="flex-1 min-w-[12rem]">
                                <label class="text-xs uppercase tracking-wide block mb-1 text-slate-600" for="filter-property-@row.Id">Property</label>
                                <select id="filter-property-@row.Id"
                                        class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                                        value="@row.PropertyName"
                                        @onchange="e => OnPropertyChanged(row, e)"
                                        aria-label="Filter property">
                                    @foreach (var prop in EffectiveFilterableProperties)
                                    {
                                        <option value="@prop.Name" selected="@(row.PropertyName == prop.Name)">@prop.Name</option>
                                    }
                                </select>
                            </div>

                            <div class="w-40 min-w-[10rem]">
                                <label class="text-xs uppercase tracking-wide block mb-1 text-slate-600" for="filter-type-@row.Id">Filter</label>
                                <select id="filter-type-@row.Id"
                                        class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                                        value="@(row.FilterType?.ToString())"
                                        @onchange="e => OnFilterTypeChanged(row, e)"
                                        aria-label="Filter type">
                                    @foreach (var option in filterChoices)
                                    {
                                        <option value="@option" selected="@(row.FilterType == option)">@FormatFilterLabel(option)</option>
                                    }
                                </select>
                            </div>

                            <div class="flex-1 min-w-[12rem]">
                                <label class="text-xs uppercase tracking-wide block mb-1 text-slate-600" for="filter-value-@row.Id">Value</label>
                                <input id="filter-value-@row.Id"
                                       class="block w-full rounded-md border @(row.ErrorMessage is null ? "border-slate-300" : "border-rose-400") shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                                       type="@GetInputType(property?.Type)"
                                       value="@row.ReferenceValue"
                                       step="@(property?.Type == SchemaPropertyType.Number ? "any" : null)"
                                       @onchange="e => OnValueChanged(row, e)"
                                       aria-label="Filter value"
                                       placeholder="@GetValuePlaceholder(property?.Type)" />
                                @if (!string.IsNullOrWhiteSpace(row.ErrorMessage))
                                {
                                    <p class="text-rose-600 text-xs mt-1">@row.ErrorMessage</p>
                                }
                            </div>

                            <div class="flex items-center">
                                <button type="button"
                                        class="inline-flex items-center justify-center rounded-md text-sm text-slate-500 hover:text-rose-600 hover:bg-rose-50 px-2 py-1 focus:outline-none focus:ring-2 focus:ring-rose-500"
                                        @onclick="() => RemoveFilter(row)"
                                        aria-label="Remove filter">
                                    <span class="material-symbols-outlined icons-default text-base">close</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </section>
</div>
