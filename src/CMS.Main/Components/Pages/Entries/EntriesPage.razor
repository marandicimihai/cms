@page "/project/{projectId:guid}/schema/{schemaId:guid}/entries"
@rendermode InteractiveServer

@attribute [Authorize]

@if (navigationSource == "project")
{
    <NavLink class="text-blue-600 hover:text-blue-700 font-medium text-sm inline-flex items-center gap-1 mb-2" href="@($"/project/{ProjectId}")" aria-label="Back to project">
        <span class="material-symbols-outlined icons-default text-base mr-1">arrow_back</span>
        Back to Project
    </NavLink>
}
else
{
    <NavLink class="text-blue-600 hover:text-blue-700 font-medium text-sm inline-flex items-center gap-1 mb-2" href="@($"/project/{ProjectId}/schema/{SchemaId}")" aria-label="Back to schema">
        <span class="material-symbols-outlined icons-default text-base mr-1">arrow_back</span>
        Back to Schema
    </NavLink>
}

<div class="flex items-center justify-between mb-4">
    <h1 class="text-lg font-medium text-slate-900">Entries</h1>
    @if (!showForm)
    {
        <button type="button" class="inline-flex items-center justify-center rounded-md font-medium bg-blue-600 hover:bg-blue-700 text-white text-sm px-3 py-2" @onclick="ToggleAddForm">
            <span class="material-symbols-outlined icons-default text-base mr-2">add</span>
            Add Entry
        </button>
    }
</div>

@if (showForm)
{
    <div class="mb-4 rounded-lg border border-slate-200 bg-white p-4 shadow-sm">
        <h2 class="text-sm font-medium text-slate-900 mb-3">New Entry</h2>
        <DynamicEntryForm @ref="entryForm" Properties="Schema.Properties" OnValidSubmit="OnEntrySubmit" OnCancel="ToggleAddForm" />
    </div>
}

<StatusIndicator @ref="statusIndicator">@statusText</StatusIndicator>

<div class="rounded-lg border border-slate-200 bg-white shadow-sm overflow-x-auto">
    <table class="min-w-full text-sm">
        <thead class="bg-slate-100">
        <tr>
            <th class="text-left px-3 py-2 text-xs uppercase tracking-wide text-slate-600 font-medium">ID</th>
            @if (Schema.Properties?.Any() == true)
            {
                @foreach (var prop in Schema.Properties)
                {
                    <th class="text-left px-3 py-2 text-xs uppercase tracking-wide text-slate-600 font-medium">@prop.Name</th>
                }
                <th class="text-left px-3 py-2 text-xs uppercase tracking-wide text-slate-600 font-medium">Created At</th>
                <th class="text-left px-3 py-2 text-xs uppercase tracking-wide text-slate-600 font-medium">Updated At</th>
            }
            else
            {
                <th class="text-left px-3 py-2 text-xs uppercase tracking-wide text-slate-600 font-medium">No Properties</th>
                <th class="text-left px-3 py-2 text-xs uppercase tracking-wide text-slate-600 font-medium">Created At</th>
                <th class="text-left px-3 py-2 text-xs uppercase tracking-wide text-slate-600 font-medium">Updated At</th>
            }
        </tr>
        </thead>
        <tbody>
        @if (Entries?.Any() == true && Schema.Properties?.Any() == true)
        {
            @foreach (var entry in Entries)
            {
                <tr class="border-t border-slate-200 hover:bg-slate-50">
                    <td class="px-3 py-2 text-slate-700 font-mono text-xs whitespace-nowrap" title="@entry.Id">@entry.Id</td>
                    @foreach (var prop in Schema.Properties)
                    {
                        var cellValue = GetEntryPropertyValue(entry, prop.Name);
                        <td class="px-3 py-2 text-slate-700 truncate max-w-[240px]" title="@(cellValue?.ToString())">
                            @FormatCell(cellValue)
                        </td>
                    }
                    <td class="px-3 py-2 text-slate-700 whitespace-nowrap" title="@(entry.CreatedAt.ToString("O"))">
                        @FormatCell(entry.CreatedAt)
                    </td>
                    <td class="px-3 py-2 text-slate-700 whitespace-nowrap" title="@(entry.UpdatedAt.ToString("O"))">
                        @FormatCell(entry.UpdatedAt)
                        
                    </td>
                </tr>
            }
        }
        else
        {
            var colCount = (Schema.Properties?.Count ?? 1) + 3;
            <tr>
                <td class="px-3 py-4 text-slate-600 text-sm" colspan="@colCount">No entries yet.</td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="hidden whitespace-pre"></div>
