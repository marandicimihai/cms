<SortAndFilterOptions 
    OnOptionsChanged="OnOptionsChangedAsync"
    SortableProperties="SortableProperties"
    FilterableProperties="Properties"
    InitialSortByProperty="CreatedAt"
    InitialDescending="true" />

@if (Properties != null)
{
    <Table>
        <TableHead>
            <TableRow>
                <TableHeader Class="px-3 py-2">
                    <input type="checkbox" aria-label="Select all entries" checked="@IsAllSelected" @onchange="ToggleSelectAllHandler" />
                </TableHeader>
                <TableHeader Class="font-mono text-xs">ID</TableHeader>
                @foreach (var prop in Properties)
                {
                    <TableHeader>@prop.Name</TableHeader>
                }
                <TableHeader>Created At</TableHeader>
                <TableHeader>Updated At</TableHeader>
                <TableHeader Class="text-right">Actions</TableHeader>
            </TableRow>
        </TableHead>
        <TableBody>
        @if (Entries.Any())
        {
            @foreach (var entry in Entries)
            {
                <TableRow>
                    <TableData Class="px-3 py-2">
                        <input type="checkbox" aria-label="Select entry @entry.Id" checked="@(() => SelectedEntries.Any(e => e.Id == entry.Id))" @onchange="@(e => ToggleEntrySelection(entry, e.Value as bool? ?? false))" />
                    </TableData>
                    <TableData Class="font-mono text-xs whitespace-nowrap">@entry.Id</TableData>
                    @foreach (var prop in Properties)
                    {
                        var cellValue = GetEntryPropertyValue(entry, prop.Name);
                        <TableData Class="truncate max-w-[240px]">
                            @FormatCell(cellValue)
                        </TableData>
                    }
                    <TableData Class="whitespace-nowrap">
                        @FormatCell(entry.CreatedAt)
                    </TableData>
                    <TableData Class="whitespace-nowrap">
                        @FormatCell(entry.UpdatedAt)
                    </TableData>
                    <TableData Class="text-right flex gap-2 justify-end">
                        <PrimaryButton Variant="ButtonVariant.Info" Icon="edit" @onclick="@(() => NavigationManager.NavigateTo($"/entry/{entry.Id}/edit"))" aria-label="Edit Entry">Edit</PrimaryButton>
                        <PrimaryButton Variant="ButtonVariant.Danger" Icon="delete" @onclick="() => OnDeleteEntry(entry)" aria-label="Delete Entry">Delete</PrimaryButton>
                    </TableData>
                </TableRow>
            }
        }
        else
        {
            <TableRow>
                <TableData Class="px-3 py-4 text-slate-600 text-sm" colspan="@((Properties.Count + 5).ToString())">No entries yet.</TableData>
            </TableRow>
        }
        </TableBody>
    </Table>

    @if (SelectedEntries.Count > 0)
    {
        <div class="flex items-center justify-between mt-4 p-3 rounded-md border border-slate-200 bg-slate-50">
            <span class="text-sm text-slate-900">@SelectedEntries.Count entr@(SelectedEntries.Count == 1 ? "y" : "ies") selected</span>
            <div class="flex gap-2">
                <SecondaryButton Variant="ButtonVariant.Neutral" @onclick="ClearSelection" aria-label="Cancel selection">Cancel</SecondaryButton>
                <PrimaryButton Variant="ButtonVariant.Danger" Icon="delete" @onclick="DeleteSelectedEntriesAsync" aria-label="Delete selected entries">Delete</PrimaryButton>
            </div>
        </div>
    }

    @if (HasMoreEntries)
    {
        <div class="mt-3 flex">
            <SecondaryButton Type="button" Variant="ButtonVariant.Neutral" @onclick="LoadMoreEntriesAsync" aria-label="Load more entries" disabled="@isLoadingMore">
                @if (isLoadingMore)
                {
                    <span class="material-symbols-outlined icons-default text-2xl animate-spin mx-auto">progress_activity</span>
                }
                else
                {
                    <span class="flex-1 text-center">Load More</span>
                }
            </SecondaryButton>
        </div>
    }
}