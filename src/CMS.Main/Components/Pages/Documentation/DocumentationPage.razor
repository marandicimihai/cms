@page "/documentation"

<div class="max-w-5xl mx-auto px-4 py-8">
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-neutral-100 mb-2">API Documentation</h1>
        <p class="text-neutral-400">Complete reference for the CMS API endpoints</p>
    </div>

    <!-- Table of Contents -->
    <nav class="mb-12 p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
        <h2 class="text-xl font-semibold text-neutral-100 mb-4">Table of Contents</h2>
        <ul class="space-y-2">
            <li><a href="#authentication" class="text-purple-400 hover:text-purple-300 transition-colors">Authentication</a></li>
            <li><a href="#entries" class="text-purple-400 hover:text-purple-300 transition-colors">Entries API</a></li>
            <li>
                <ul class="ml-4 mt-2 space-y-1">
                    <li><a href="/documentation/#create-entry" class="text-neutral-400 hover:text-neutral-300 transition-colors">Create Entry</a></li>
                    <li><a href="/documentation/#get-entries" class="text-neutral-400 hover:text-neutral-300 transition-colors">Get Entries</a></li>
                    <li><a href="/documentation/#get-entry" class="text-neutral-400 hover:text-neutral-300 transition-colors">Get Entry by ID</a></li>
                    <li><a href="/documentation/#update-entry" class="text-neutral-400 hover:text-neutral-300 transition-colors">Update Entry</a></li>
                    <li><a href="/documentation/#delete-entry" class="text-neutral-400 hover:text-neutral-300 transition-colors">Delete Entry</a></li>
                </ul>
            </li>
        </ul>
    </nav>

    <!-- Authentication Section -->
    <section id="authentication" class="mb-12">
        <h2 class="text-2xl font-bold text-neutral-100 mb-4">Authentication</h2>
        <div class="p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
            <p class="text-neutral-300 mb-4">
                All API endpoints require authentication using an API Key. You can generate API keys from your project settings.
            </p>
            <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800">
                <p class="text-xs text-neutral-400 mb-2">Header</p>
                <code class="text-purple-400">X-API-Key: your-api-key-here</code>
            </div>
            <div class="mt-4 p-4 rounded-lg bg-yellow-900/20 border border-yellow-700/30">
                <p class="text-yellow-400 text-sm">
                    <span class="font-semibold">‚ö†Ô∏è Important:</span> Keep your API keys secure and never commit them to version control.
                </p>
            </div>
        </div>
    </section>

    <!-- Entries API Section -->
    <section id="entries" class="mb-12">
        <h2 class="text-2xl font-bold text-neutral-100 mb-6">Entries API</h2>
        <p class="text-neutral-400 mb-6">
            Entries are the content records stored in your CMS. Each entry belongs to a schema and contains field data based on that schema's properties.
        </p>

        <!-- Create Entry -->
        <article id="create-entry" class="mb-8 p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
            <div class="flex items-center gap-3 mb-4">
                <span class="px-3 py-1 rounded-full bg-green-900/30 text-green-400 text-sm font-semibold border border-green-700/30">POST</span>
                <code class="text-neutral-300">/api/{schemaId}/entries</code>
            </div>
            <h3 class="text-xl font-semibold text-neutral-100 mb-3">Create Entry</h3>
            <p class="text-neutral-400 mb-4">Creates a new entry for a specific schema.</p>

            <div class="space-y-4">
                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Path Parameters</h4>
                    <ul class="list-disc list-inside text-neutral-400 space-y-1">
                        <li><code class="text-purple-400">schemaId</code> (string, required) - The GUID of the schema</li>
                    </ul>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Request Body</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800 overflow-x-auto">
                        <pre class="text-sm text-neutral-300"><code>{
  "fields": {
    "title": "My First Blog Post",
    "content": "This is the content of my blog post",
    "author": "John Doe",
    "published": "true"
  }
}</code></pre>
                    </div>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Response (201 Created)</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800 overflow-x-auto">
                        <pre class="text-sm text-neutral-300"><code>{
  "entry": {
    "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "schemaId": "12345678-1234-1234-1234-123456789012",
    "fields": {
      "title": "My First Blog Post",
      "content": "This is the content of my blog post",
      "author": "John Doe",
      "published": "true"
    },
    "createdAt": "2025-10-26T10:30:00Z",
    "updatedAt": "2025-10-26T10:30:00Z"
  }
}</code></pre>
                    </div>
                </div>

                <div class="p-4 rounded-lg bg-blue-900/20 border border-blue-700/30">
                    <p class="text-blue-400 text-sm">
                        <span class="font-semibold">üí° Note:</span> Fields are validated against the schema properties. The entry will only be created if all required fields are provided and field types match the schema definition.
                    </p>
                </div>
            </div>
        </article>

        <!-- Get Entries -->
        <article id="get-entries" class="mb-8 p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
            <div class="flex items-center gap-3 mb-4">
                <span class="px-3 py-1 rounded-full bg-blue-900/30 text-blue-400 text-sm font-semibold border border-blue-700/30">GET</span>
                <code class="text-neutral-300">/api/{schemaId}/entries</code>
            </div>
            <h3 class="text-xl font-semibold text-neutral-100 mb-3">Get Entries</h3>
            <p class="text-neutral-400 mb-4">Retrieves a paginated list of entries for a specific schema with optional filtering and sorting.</p>

            <div class="space-y-4">
                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Path Parameters</h4>
                    <ul class="list-disc list-inside text-neutral-400 space-y-1">
                        <li><code class="text-purple-400">schemaId</code> (string, required) - The GUID of the schema</li>
                    </ul>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Query Parameters</h4>
                    <ul class="list-disc list-inside text-neutral-400 space-y-1">
                        <li><code class="text-purple-400">pageNumber</code> (integer, optional) - Page number (default: 1, min: 1)</li>
                        <li><code class="text-purple-400">pageSize</code> (integer, optional) - Items per page (default: 10, min: 1)</li>
                    </ul>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Request Body (Optional)</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800 overflow-x-auto">
                        <pre class="text-sm text-neutral-300"><code>{
  "sortByPropertyName": "createdAt",
  "descending": true,
  "filters": [
    {
      "propertyName": "published",
      "filterType": "Equals",
      "referenceValue": "true"
    },
    {
      "propertyName": "title",
      "filterType": "Contains",
      "referenceValue": "Blog"
    }
  ]
}</code></pre>
                    </div>
                    <p class="text-neutral-500 text-xs mt-2">
                        Available filter types: <code class="text-purple-400">Equals</code>, <code class="text-purple-400">NotEquals</code>, <code class="text-purple-400">Contains</code>, <code class="text-purple-400">StartsWith</code>, <code class="text-purple-400">EndsWith</code>, <code class="text-purple-400">GreaterThan</code>, <code class="text-purple-400">LessThan</code>
                    </p>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Response (200 OK)</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800 overflow-x-auto">
                        <pre class="text-sm text-neutral-300"><code>{
  "entries": [
    {
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "schemaId": "12345678-1234-1234-1234-123456789012",
      "fields": {
        "title": "My First Blog Post",
        "content": "This is the content...",
        "author": "John Doe",
        "published": "true"
      },
      "createdAt": "2025-10-26T10:30:00Z",
      "updatedAt": "2025-10-26T10:30:00Z"
    }
  ],
  "paginationMetadata": {
    "currentPage": 1,
    "pageSize": 10,
    "totalCount": 42,
    "totalPages": 5,
    "hasPrevious": false,
    "hasNext": true
  }
}</code></pre>
                    </div>
                </div>
            </div>
        </article>

        <!-- Get Entry by ID -->
        <article id="get-entry" class="mb-8 p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
            <div class="flex items-center gap-3 mb-4">
                <span class="px-3 py-1 rounded-full bg-blue-900/30 text-blue-400 text-sm font-semibold border border-blue-700/30">GET</span>
                <code class="text-neutral-300">/api/entry/{entryId}</code>
            </div>
            <h3 class="text-xl font-semibold text-neutral-100 mb-3">Get Entry by ID</h3>
            <p class="text-neutral-400 mb-4">Retrieves a single entry by its unique identifier.</p>

            <div class="space-y-4">
                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Path Parameters</h4>
                    <ul class="list-disc list-inside text-neutral-400 space-y-1">
                        <li><code class="text-purple-400">entryId</code> (string, required) - The GUID of the entry</li>
                    </ul>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Response (200 OK)</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800 overflow-x-auto">
                        <pre class="text-sm text-neutral-300"><code>{
  "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
  "schemaId": "12345678-1234-1234-1234-123456789012",
  "fields": {
    "title": "My First Blog Post",
    "content": "This is the content of my blog post",
    "author": "John Doe",
    "published": "true"
  },
  "createdAt": "2025-10-26T10:30:00Z",
  "updatedAt": "2025-10-26T10:30:00Z"
}</code></pre>
                    </div>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Error Responses</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800">
                        <p class="text-neutral-400 text-sm mb-2"><span class="text-red-400 font-semibold">404 Not Found</span> - Entry does not exist or you don't have permission to access it</p>
                    </div>
                </div>
            </div>
        </article>

        <!-- Update Entry -->
        <article id="update-entry" class="mb-8 p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
            <div class="flex items-center gap-3 mb-4">
                <span class="px-3 py-1 rounded-full bg-amber-900/30 text-amber-400 text-sm font-semibold border border-amber-700/30">PUT</span>
                <code class="text-neutral-300">/api/entry/{entryId}</code>
            </div>
            <h3 class="text-xl font-semibold text-neutral-100 mb-3">Update Entry</h3>
            <p class="text-neutral-400 mb-4">Updates an existing entry's field values.</p>

            <div class="space-y-4">
                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Path Parameters</h4>
                    <ul class="list-disc list-inside text-neutral-400 space-y-1">
                        <li><code class="text-purple-400">entryId</code> (string, required) - The GUID of the entry</li>
                    </ul>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Request Body</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800 overflow-x-auto">
                        <pre class="text-sm text-neutral-300"><code>{
  "fields": {
    "title": "Updated Blog Post Title",
    "content": "Updated content here",
    "author": "John Doe",
    "published": "false"
  }
}</code></pre>
                    </div>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Response (200 OK)</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800">
                        <p class="text-neutral-400 text-sm">Empty response body on success</p>
                    </div>
                </div>

                <div class="p-4 rounded-lg bg-blue-900/20 border border-blue-700/30">
                    <p class="text-blue-400 text-sm">
                        <span class="font-semibold">üí° Note:</span> The update replaces only fields you provide. Other fields remain unchanged.
                    </p>
                </div>
            </div>
        </article>

        <!-- Delete Entry -->
        <article id="delete-entry" class="mb-8 p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
            <div class="flex items-center gap-3 mb-4">
                <span class="px-3 py-1 rounded-full bg-red-900/30 text-red-400 text-sm font-semibold border border-red-700/30">DELETE</span>
                <code class="text-neutral-300">/api/entry/{entryId}</code>
            </div>
            <h3 class="text-xl font-semibold text-neutral-100 mb-3">Delete Entry</h3>
            <p class="text-neutral-400 mb-4">Permanently deletes an entry.</p>

            <div class="space-y-4">
                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Path Parameters</h4>
                    <ul class="list-disc list-inside text-neutral-400 space-y-1">
                        <li><code class="text-purple-400">entryId</code> (string, required) - The GUID of the entry</li>
                    </ul>
                </div>

                <div>
                    <h4 class="text-sm font-semibold text-neutral-300 mb-2">Response (200 OK)</h4>
                    <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800">
                        <p class="text-neutral-400 text-sm">Empty response body on success</p>
                    </div>
                </div>

                <div class="p-4 rounded-lg bg-red-900/20 border border-red-700/30">
                    <p class="text-red-400 text-sm">
                        <span class="font-semibold">‚ö†Ô∏è Warning:</span> This action is permanent and cannot be undone. Make sure you really want to delete this entry.
                    </p>
                </div>
            </div>
        </article>
    </section>

    <!-- Common Error Responses -->
    <section id="errors" class="mb-12">
        <h2 class="text-2xl font-bold text-neutral-100 mb-4">Common Error Responses</h2>
        <div class="p-6 rounded-xl border border-neutral-800 bg-neutral-900/50 space-y-4">
            <div>
                <h4 class="font-semibold text-red-400 mb-2">400 Bad Request</h4>
                <p class="text-neutral-400 text-sm mb-2">Invalid request format or validation errors.</p>
                <div class="bg-neutral-950 rounded-lg p-4 border border-neutral-800">
                    <pre class="text-sm text-neutral-300"><code>{
  "errors": {
    "Fields": ["Property 'Fields' must be a not null json object."]
  }
}</code></pre>
                </div>
            </div>

            <div>
                <h4 class="font-semibold text-amber-400 mb-2">401 Unauthorized</h4>
                <p class="text-neutral-400 text-sm">Missing or invalid API key.</p>
            </div>

            <div>
                <h4 class="font-semibold text-red-400 mb-2">404 Not Found</h4>
                <p class="text-neutral-400 text-sm">Resource not found or you don't have permission to access it.</p>
            </div>

            <div>
                <h4 class="font-semibold text-red-400 mb-2">500 Internal Server Error</h4>
                <p class="text-neutral-400 text-sm">An unexpected error occurred on the server.</p>
            </div>
        </div>
    </section>

    <!-- Getting Started -->
    <section id="getting-started" class="mb-12">
        <h2 class="text-2xl font-bold text-neutral-100 mb-4">Getting Started</h2>
        <div class="p-6 rounded-xl border border-neutral-800 bg-neutral-900/50">
            <ol class="list-decimal list-inside space-y-3 text-neutral-300">
                <li>Create a project in your CMS dashboard</li>
                <li>Generate an API key for your project</li>
                <li>Create a schema with the fields you need</li>
                <li>Start creating entries using the API</li>
            </ol>
        </div>
    </section>
</div>

@code {
    
}
