@using CMS.Main.Abstractions.Properties.PropertyTypes
@rendermode InteractiveServer
@attribute [Authorize]

@if (IsOpen)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center bg-black/40 backdrop-blur opacity-100"
         aria-modal="true" role="dialog" tabindex="-1" @onkeydown="HandleKeyDown">
        <div class="rounded-xl border border-neutral-800 bg-gradient-to-b from-neutral-800 to-neutral-800/90 shadow-sm p-6 max-w-sm sm:max-w-md w-full mx-4 overflow-auto max-h-screen">
            <div class="mb-6 flex items-center justify-between">
                <div class="flex items-center gap-2">
                    <h2 class="text-lg font-medium text-neutral-100">Update Property</h2>
                </div>
                <button @onclick="CloseModal" class="text-neutral-400 hover:text-neutral-100 transition-colors" aria-label="Close modal">
                    <span class="material-symbols-outlined icons-default text-xl">close</span>
                </button>
            </div>

            <EditForm Model="PropertyDto" OnValidSubmit="HandleUpdatePropertySubmit" FormName="UpdatePropertyForm">
                <DataAnnotationsValidator/>
                
                <div class="mb-4">
                    <label for="property-name" class="block text-xs font-medium uppercase tracking-wide text-neutral-400 mb-1">Name</label>
                    <InputText id="property-name" @bind-Value="PropertyDto.Name" class="block w-full rounded-full border border-neutral-600 bg-neutral-700 shadow-sm text-sm px-3 py-2 focus:border-purple-500 focus:ring-purple-500 text-neutral-100" placeholder="Property name"/>
                    <ValidationMessage For="() => PropertyDto.Name" class="text-rose-600 text-xs mt-1"/>
                </div>
                
                <div class="mb-4">
                    <label class="block text-xs font-medium uppercase tracking-wide text-neutral-400 mb-1">Type</label>
                    <div class="text-sm text-neutral-300 bg-neutral-700 px-3 py-2 rounded-full border border-neutral-600">
                        @PropertyDto.Type
                    </div>
                    <p class="text-xs text-neutral-400 mt-1">Type cannot be changed after creation</p>
                </div>
                
                <div class="mb-4">
                    <label class="flex items-center gap-2">
                        <InputCheckbox @bind-Value="PropertyDto.IsRequired" />
                        <span class="text-sm text-neutral-100">Required</span>
                    </label>
                </div>
                
                @if (PropertyDto.Type == PropertyType.Enum)
                {
                    <div class="mb-6">
                        <label for="property-options" class="block text-xs font-medium uppercase tracking-wide text-neutral-400 mb-1">Options (comma separated)</label>
                        <InputText id="property-options" @bind-Value="EnumOptions" class="block w-full rounded-full border border-neutral-600 bg-neutral-700 shadow-sm text-sm px-3 py-2 focus:border-purple-500 focus:ring-purple-500 text-neutral-100" placeholder="Red, Green, Blue"/>
                        @if (!IsEnumOptionsValid)
                        {
                            <span class="text-rose-600 text-xs mt-1">You must provide at least one option for Enum type.</span>
                        }
                    </div>
                }

                <div class="flex justify-end gap-2">
                    <PrimaryButton Type="submit" Variant="ButtonVariant.Primary" Icon="save" aria-label="Save Property" disabled="@(PropertyDto.Type == PropertyType.Enum && !IsEnumOptionsValid)">Update Property</PrimaryButton>
                </div>
            </EditForm>
        </div>
    </div>
}
