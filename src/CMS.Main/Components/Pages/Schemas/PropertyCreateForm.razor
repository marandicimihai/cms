@using CMS.Main.DTOs.SchemaProperty
@rendermode InteractiveServer

<div class="@(Visible ? "" : "hidden")">
    <EditForm Model="PropertyDto" OnValidSubmit="HandleCreatePropertySubmit" class="mb-4">
        <DataAnnotationsValidator/>
        <div class="grid grid-cols-1 gap-4">
            <div class="flex flex-col gap-2 md:col-span-1">
                <label class="text-xs uppercase tracking-wide text-slate-600">Name</label>
                <InputText @bind-Value="PropertyDto.Name" class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500" placeholder="Property name"/>
                <ValidationMessage For="() => PropertyDto.Name" class="text-rose-600 text-xs"/>
            </div>
            <div class="flex flex-col gap-2 md:col-span-1">
                <label class="text-xs uppercase tracking-wide text-slate-600">Type</label>
                <InputSelect @bind-Value="PropertyDto.Type" class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500" @onchange="OnTypeChanged">
                    @foreach (var t in PropertyTypes)
                    {
                        <option value="@t">@t</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => PropertyDto.Type" class="text-rose-600 text-xs"/>
            </div>
            <div class="flex flex-col gap-2 md:col-span-1">
                <label class="text-xs uppercase tracking-wide text-slate-600">Required</label>
                <InputCheckbox @bind-Value="PropertyDto.IsRequired" class="h-5 w-5 text-blue-600 focus:ring-blue-500"/>
            </div>
            @if (PropertyDto.Type == SchemaPropertyType.Enum)
            {
                <div class="flex flex-col gap-2 md:col-span-1">
                    <label class="text-xs uppercase tracking-wide text-slate-600">Options (comma separated)</label>
                    <InputText @bind-Value="EnumOptions" class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500" placeholder="Red, Green, Blue"/>
                    @if (!IsEnumOptionsValid)
                    {
                        <span class="text-rose-600 text-xs mt-1">You must provide at least one option for Enum type.</span>
                    }
                </div>
            }
        </div>
        <div class="flex gap-2 mt-4">
            <button type="submit" class="inline-flex items-center justify-center rounded-md font-medium bg-blue-600 text-white hover:bg-blue-700 text-sm px-3 py-2 focus:ring-2 focus:ring-blue-500 min-w-[140px]" aria-label="Save Property" disabled="@(PropertyDto.Type == SchemaPropertyType.Enum && !IsEnumOptionsValid)">
                <span class="material-symbols-outlined icons-default text-base mr-2">save</span>
                Save Property
            </button>
            <button type="button" class="inline-flex items-center justify-center rounded-md font-medium bg-slate-200 text-slate-900 hover:bg-slate-300 text-sm px-3 py-2 focus:ring-2 focus:ring-blue-500" aria-label="Cancel" @onclick="async () => await OnCancel.InvokeAsync()">
                <span class="material-symbols-outlined icons-default text-base mr-2">close</span>
                Cancel
            </button>
        </div>
    </EditForm>
</div>