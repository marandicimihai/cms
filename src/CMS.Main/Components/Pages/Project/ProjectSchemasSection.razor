@rendermode InteractiveServer

<Paper>
    <div class="flex items-center justify-between mb-3">
        <h2 class="text-lg font-medium">Schemas</h2>
        @if (!IsAddFormVisible)
        {
            <PrimaryButton Type="button" Variant="ButtonVariant.Primary" Icon="add" @onclick="ShowAddForm">Add Schema</PrimaryButton>
        }
    </div>
    @if (IsAddFormVisible)
    {
        <EditForm Model="NewSchema" OnValidSubmit="HandleAddSchema" class="mb-4">
            <DataAnnotationsValidator />
            <div class="flex flex-col gap-2">
                <label for="schema-name" class="text-xs uppercase tracking-wide text-slate-600">Schema Name</label>
                <InputText @bind-Value="NewSchema.Name" id="schema-name" class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500" placeholder="Enter schema name" aria-label="Schema Name" />
                <ValidationMessage For="() => NewSchema.Name" class="text-rose-600 text-xs" />
            </div>
            <div class="flex gap-2 mt-4">
                <PrimaryButton Type="submit" Variant="ButtonVariant.Primary" Icon="save" aria-label="Create Schema">
                    Create Schema
                </PrimaryButton>
                <SecondaryButton Type="button" Variant="ButtonVariant.Neutral" Icon="close" OnClick="HideAddForm">Cancel</SecondaryButton>
            </div>
        </EditForm>
    }
    @if (Schemas.Count > 0)
    {
        <Table>
            <TableHead>
                <TableRow>
                    <TableHeader>Name</TableHeader>
                    <TableHeader Class="text-right">Actions</TableHeader>
                </TableRow>
            </TableHead>
            <TableBody>
            @foreach (var schema in Schemas)
            {
                <TableRow>
                    <TableData>@schema.Name</TableData>
                    <TableData Class="text-right flex gap-2 justify-end">
                        <NavLink class="inline-flex items-center justify-center rounded-md font-medium bg-slate-200 text-slate-900 hover:bg-slate-300 text-xs px-2.5 py-1.5 focus:ring-2 focus:ring-blue-500" aria-label="View entries" href="@($"/schema/{schema.Id}/entries")">
                            <span class="material-symbols-outlined icons-default text-base mr-1">arrow_forward</span>
                            View Entries
                        </NavLink>
                        <NavLink class="inline-flex items-center justify-center rounded-md font-medium bg-blue-600 text-white hover:bg-blue-700 text-xs px-2.5 py-1.5 focus:ring-2 focus:ring-blue-500" aria-label="Edit schema" href="@($"/schema/{schema.Id}")">
                            <span class="material-symbols-outlined icons-default text-base mr-1">edit</span>
                            Edit
                        </NavLink>
                        <PrimaryButton Type="button" Variant="ButtonVariant.Danger" Icon="delete" OnClick="() => OnDeleteSchemaAsync(schema)" aria-label="Delete schema">Delete</PrimaryButton>
                    </TableData>
                </TableRow>
            }
            </TableBody>
        </Table>
    }
    else
    {
        <div class="text-slate-500 text-sm">No schemas found for this project.</div>
    }
</Paper>
