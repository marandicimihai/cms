@rendermode InteractiveServer

<div class="@(Visible ? "" : "hidden")">
    <EditForm Model="ApiKeyDto" OnValidSubmit="HandleCreateApiKeySubmit" class="mb-4">
        <DataAnnotationsValidator/>
        <div class="grid grid-cols-1 gap-4">
            <div class="flex flex-col gap-2 md:col-span-1">
                <label class="text-xs uppercase tracking-wide text-slate-600">Name</label>
                <InputText @bind-Value="ApiKeyDto.Name" class="block w-full rounded-md border border-slate-300 shadow-sm text-sm px-3 py-2 focus:border-blue-500 focus:ring-blue-500" placeholder="API key name"/>
                <ValidationMessage For="() => ApiKeyDto.Name" class="text-rose-600 text-xs"/>
            </div>
        </div>
        <div class="flex gap-2 mt-4">
            <PrimaryButton Type="submit" Variant="ButtonVariant.Info" Icon="save" aria-label="Create API Key">Create API Key</PrimaryButton>
            <SecondaryButton Type="button" Variant="ButtonVariant.Neutral" Icon="close" @onclick="async () => await OnCancel.InvokeAsync()" aria-label="Cancel">Cancel</SecondaryButton>
        </div>
    </EditForm>
</div>

@if (!string.IsNullOrEmpty(rawKey))
{
    <div class="mt-4 rounded-md bg-amber-50 border border-amber-100 p-3 mb-4">
        <p class="text-sm text-amber-900 mb-2">New API key (shown once):</p>
        <pre class="bg-white p-2 rounded text-sm">@rawKey</pre>
        <p class="text-xs text-slate-600 mt-2">Make sure to copy this value now. It will not be shown again.</p>
    </div>
}