@page "/Error"
@using System.Diagnostics

<PageTitle>Error</PageTitle>

<div class="rounded-xl border border-neutral-800 bg-gradient-to-b from-neutral-800 to-neutral-800/90 shadow-sm p-4">
    <h1 class="text-2xl font-semibold text-neutral-100">Error.</h1>
    <h2 class="text-lg font-medium text-neutral-100 mb-4">An error occurred while processing your request.</h2>

    @if (ShowRequestId)
    {
        <p class="text-sm text-neutral-100">
            <strong class="text-neutral-400">Request ID:</strong> <code class="text-neutral-100">@RequestId</code>
        </p>
    }

    <h3 class="text-lg font-medium text-neutral-100 mb-2">Development Mode</h3>
    <p class="text-sm text-neutral-100 mb-4">
        Swapping to <strong class="text-neutral-400">Development</strong> environment will display more detailed information about the error that
        occurred.
    </p>
    <p class="text-sm text-neutral-100">
        <strong class="text-neutral-400">The Development environment shouldn't be enabled for deployed applications.</strong>
        It can result in displaying sensitive information from exceptions to end users.
        For local debugging, enable the <strong class="text-neutral-400">Development</strong> environment by setting the <strong class="text-neutral-400">ASPNETCORE_ENVIRONMENT</strong>
        environment variable to <strong class="text-neutral-400">Development</strong>
        and restarting the app.
    </p>
</div>

@code{

    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized()
    {
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
    }

}